name: Terraform Plan & Apply

on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

env:
  TF_IN_AUTOMATION: true
  TF_VERSION: "1.11.4"

jobs:
  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Azure Login with OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="resource_group_name=${{ secrets.TF_BACKEND_RG }}" \
            -backend-config="storage_account_name=${{ secrets.TF_BACKEND_SA }}" \
            -backend-config="container_name=${{ secrets.TF_BACKEND_CONTAINER }}" \
            -backend-config="key=${{ secrets.TF_BACKEND_KEY }}"
      
      - name: Export ARM_* environment variables for Azure Provider
        run: |
          echo "ARM_CLIENT_ID=${{ secrets.AZURE_CLIENT_ID }}" >> $GITHUB_ENV
          echo "ARM_TENANT_ID=${{ secrets.AZURE_TENANT_ID }}" >> $GITHUB_ENV
          echo "ARM_SUBSCRIPTION_ID=${{ secrets.AZURE_SUBSCRIPTION_ID }}" >> $GITHUB_ENV
          echo "ARM_USE_OIDC=true" >> $GITHUB_ENV

      - name: Export TF_VAR_* environment variables
        run: |
          echo "TF_VAR_expensetrackerapi_image_name=${{ secrets.TF_VAR_expensetrackerapi_image_name }}" >> $GITHUB_ENV
          echo "TF_VAR_resource_group_name=${{ secrets.TF_VAR_resource_group_name }}" >> $GITHUB_ENV
          echo "TF_VAR_sql_admin_group_display_name=${{ secrets.TF_VAR_sql_admin_group_display_name }}" >> $GITHUB_ENV
          echo "TF_VAR_sql_admin_group_object_id=${{ secrets.TF_VAR_sql_admin_group_object_id }}" >> $GITHUB_ENV
          echo "TF_VAR_sql_admin_group_tenant_id=${{ secrets.TF_VAR_sql_admin_group_tenant_id }}" >> $GITHUB_ENV      

      - name: Terraform Plan
        run: terraform plan -input=false -out=tfplan

      - name: Upload Plan Artifact
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan
          path: tfplan
  
  terraform-apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    needs: terraform-plan
    environment: production

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Azure Login with OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="resource_group_name=${{ secrets.TF_BACKEND_RG }}" \
            -backend-config="storage_account_name=${{ secrets.TF_BACKEND_SA }}" \
            -backend-config="container_name=${{ secrets.TF_BACKEND_CONTAINER }}" \
            -backend-config="key=${{ secrets.TF_BACKEND_KEY }}"
      
      - name: Export ARM_* environment variables for Azure Provider
        run: |
          echo "ARM_CLIENT_ID=${{ secrets.AZURE_CLIENT_ID }}" >> $GITHUB_ENV
          echo "ARM_TENANT_ID=${{ secrets.AZURE_TENANT_ID }}" >> $GITHUB_ENV
          echo "ARM_SUBSCRIPTION_ID=${{ secrets.AZURE_SUBSCRIPTION_ID }}" >> $GITHUB_ENV
          echo "ARM_USE_OIDC=true" >> $GITHUB_ENV

      - name: Export TF_VAR_* environment variables
        run: |
          echo "TF_VAR_resource_group_name=${{ secrets.TF_VAR_resource_group_name }}" >> $GITHUB_ENV
          echo "TF_VAR_sql_admin_group_display_name=${{ secrets.TF_VAR_sql_admin_group_display_name }}" >> $GITHUB_ENV
          echo "TF_VAR_sql_admin_group_object_id=${{ secrets.TF_VAR_sql_admin_group_object_id }}" >> $GITHUB_ENV
          echo "TF_VAR_sql_admin_group_tenant_id=${{ secrets.TF_VAR_sql_admin_group_tenant_id }}" >> $GITHUB_ENV      

      - name: Download Plan Artifact
        uses: actions/download-artifact@v4
        with:
          name: terraform-plan

      - name: Terraform Apply
        run: terraform apply -input=false tfplan